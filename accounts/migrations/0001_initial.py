# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-18 15:02
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=40, primary_key=True, serialize=False, unique=True)),
                ('fullname', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateField(default=django.utils.timezone.now)),
                ('is_verified', models.BooleanField(default=False)),
                ('card_id', models.CharField(blank=True, help_text=' NIM', max_length=20)),
                ('contact', models.CharField(blank=True, help_text=' ID line / No.Hp', max_length=255)),
                ('alamat_kelas', models.CharField(default='Institut Teknologi Bandung', max_length=200)),
                ('alamat_kelas_lat', models.FloatField(blank=True, default=-6.889269)),
                ('alamat_kelas_lon', models.FloatField(blank=True, default=107.610394)),
                ('maximum_guest', models.PositiveIntegerField(default=10)),
                ('institution', models.CharField(blank=True, max_length=100)),
                ('fee', models.PositiveIntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
                'verbose_name': 'User',
            },
        ),
    ]
